CREATE TABLE HEIGHT_INFO AS
SELECT studno, NAME, HEIGHT 
FROM STUDENT
WHERE 1 = 0;
-- 크리에이트 테이블 하고 쿼리문 만드는 이유가 

CREATE TABLE WEIGHT_INFO AS
SELECT studno, NAME, HEIGHT WEIGHT 
FROM STUDENT
WHERE 1 = 0;

SELECT * FROM HEIGHT_INFO;
SELECT * FROM WEIGHT_INFO;

-- delete, drop 보다훨씬 더 빠르고 강력하지만 복구 불가 TRUNCATE
TRUNCATE TABLE HEIGHT_INFO;
TRUNCATE TABLE WEIGHT_INFO;

-- DDL 사용시, 혹은 트랜잭션을 활용할 때는 늘 주의할 것

-- HEIGHT INFO 에는 학번, 이름, 키 
-- WEIGHT INFO 에는 학번, 이름, 체중 

INSERT ALL
INTO HEIGHT_INFO(STUDNO, NAME, HEIGHT) VALUES(STUDNO, NAME, HEIGHT)
INTO WEIGHT_INFO(STUDNO, NAME, WEIGHT) VALUES(STUDNO, NAME, WEIGHT)
SELECT * FROM STUDENT s WHERE GRADE >= '2';


-- INSERT ALL CONDITIONAL 
-- 2학년 이상의 학생, HEIGHT_INFO
INSERT FIRST
WHEN HEIGHT >= 170 THEN -- IF
INTO  HEIGHT_INFO VALUES(STUDNO, NAME, HEIGHT)
WHEN WEIGHT >= 70 THEN -- ELSE IF
INTO  WEIGHT_INFO VALUES(STUDNO, NAME, WEIGHT)
SELECT * FROM STUDENT S WHERE GRADE >= '2';
INTO
	HEIGHT_INFO(STUDNO,
	NAME,
	HEIGHT)
VALUES(STUDNO,
NAME,
HEIGHT)
INTO
	WEIGHT_INFO(STUDNO,
	NAME,
	WEIGHT)
VALUES(STUDNO,
NAME,
WEIGHT)
SELECT
	*
FROM
	STUDENT s
WHERE
	GRADE >= '2';

-- PIVOTING
CREATE TABLE SALES(
	SALES_NO NUMBER,
	WEEK_NO NUMBER,
	SALES_MON NUMBER,
	SALES_TUE NUMBER,
	SALES_WED NUMBER,
	SALES_THU NUMBER,
	SALES_FRI NUMBER
);

CREATE TABLE SALES_DATA(
	SALES_NO NUMBER,
	WEEK_NO NUMBER,
	DAY_NO NUMBER,
	SALES NUMBER
);

INSERT INTO SALES VALUES(1101, 4, 100, 150, 80, 60, 120);
INSERT INTO SALES VALUES(1101, 5, 300, 300, 230, 125, 150);

SELECT * FROM SALES;
SELECT * FROM SALES_DATA;


